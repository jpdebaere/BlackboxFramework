// Automatically generated by the tree shaker of Oberon+ IDE on 2021-02-01T19:03:08

definition WinNet
	import
		WinApi
	const 
		INVALID_SOCKET = -1 
		IOC_OUT = 1073741824 
		IOC_IN = 2147483648 
		IPPROTO_TCP = 6 
		INADDR_NONE = -1 
		SOCKET_ERROR = -1 
		SOCK_STREAM = 1 
		PF_INET = 2 
		WSAEINVAL = 10022 
		WSAEWOULDBLOCK = 10035 
		WSAEADDRNOTAVAIL = 10049 
		WSAECONNRESET = 10054 
		WSAENOTCONN = 10057 
		WSAETIMEDOUT = 10060 
		WSAECONNREFUSED = 10061 
		WSASYSNOTREADY = 10091 
		WSAVERNOTSUPPORTED = 10092 
	type 
		u_char = char 
		u_short = shortint 
		u_int = integer 
		u_long = integer 
		SOCKET = u_int 
		fd_set = cstruct 
					fd_count: u_int
					fd_array: carray 64 of SOCKET
				end 
		timeval = cstruct 
					tv_sec: integer
					tv_usec: integer
				end 
		hostent = cstruct 
					h_name: WinApi.PtrSTR
					h_aliases: unsafe pointer to carray of WinApi.PtrSTR
					h_addrtype: shortint
					h_length: shortint
					h_addr_list: unsafe pointer to carray of unsafe pointer to carray of char
				end 
		Ptrhostent = unsafe pointer to hostent 
		in_addr = cstruct 
					S_un: cstruct 
							S_un_b: cstruct 
									s_b1: u_char
									s_b2: u_char
									s_b3: u_char
									s_b4: u_char
								end
							S_un_w: cstruct 
									s_w1: u_short
									s_w2: u_short
								end
							S_addr: u_long
						end
				end 
		sockaddr_in = cstruct 
					sin_family: shortint
					sin_port: u_short
					sin_addr: in_addr
					sin_zero: carray 8 of char
				end 
		WSADATA = cstruct 
					wVersion: shortint
					wHighVersion: shortint
					szDescription: carray 257 of char
					szSystemStatus: carray 129 of char
					iMaxSockets: shortint
					iMaxUdpDg: shortint
					lpVendorInfo: WinApi.PtrSTR
				end 
		sockaddr = cstruct 
					sa_family: u_short
					sa_data: carray 14 of char
				end 
	
		proc accept(s: SOCKET; var addr: sockaddr; var addrlen: integer): SOCKET 
		proc bind(s: SOCKET; var name: sockaddr; namelen: integer): integer 
		proc closesocket(s: SOCKET): integer 
		proc connect(s: SOCKET; var name: sockaddr; namelen: integer): integer 
		proc ioctlsocket(s: SOCKET; cmd: integer; var argp: u_long): integer 
		proc getsockname(s: SOCKET; var name: sockaddr; var namelen: integer): integer 
		proc htons(hostshort: u_short): u_short 
		proc inet_addr(cp: WinApi.PtrSTR): integer 
		proc listen(s: SOCKET; backlog: integer): integer 
		proc recv(s: SOCKET; buf: WinApi.PtrSTR; len_: integer; flags: set): integer 
		proc select(nfds: integer; var readfds: fd_set; var writefds: fd_set; var exceptfds: fd_set; var timeout: timeval): integer 
		proc send(s: SOCKET; buf: WinApi.PtrSTR; len_: integer; flags: set): integer 
		proc socket(af: integer; type_: integer; protocol: integer): SOCKET 
		proc gethostbyname(name: WinApi.PtrSTR): Ptrhostent 
		proc WSAStartup(wVersionRequested: shortint; var lpWSAData: WSADATA): integer 
		proc WSACleanup(): integer 
		proc WSAGetLastError(): integer 
	
end WinNet